# -*- coding: utf-8 -*-
"""phone_pattern_app_v2.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AxiQrAbNcnFdIh0OMfn5gLDqsIOIwE2I
"""

pip install streamlit

import re
import streamlit as st

def generate_all_combinations(name, phone):
    # Clean the phone number (remove spaces, dashes, brackets, dots)
    cleaned_phone = re.sub(r"[^\d+]", "", phone)

    # Extract country code
    match = re.match(r"^\+?(\d{1,4})", cleaned_phone)
    if not match:
        return name + ' "' + phone + '"', "", ""

    country_code = match.group(1)
    number_wo_cc = cleaned_phone[len(country_code):].lstrip("0")

    # Spaced version (before last 5 digits)
    spaced_local = (
        number_wo_cc[:-5] + " " + number_wo_cc[-5:]
        if len(number_wo_cc) > 5 else number_wo_cc
    )

    # 5 phone number variations
    original = f'"{phone}"'
    plus_country = f'"+{country_code}{number_wo_cc}"'
    zero_local = f'"0{number_wo_cc}"'
    spaced = f'"{spaced_local}"'
    plain = f'"{number_wo_cc}"'

    # Outputs
    output1 = f"{name} {original}"
    output2 = f"{name} {original} OR {zero_local} OR {plain}"
    output3 = f"{name} {original} OR {plus_country} OR {zero_local} OR {spaced} OR {plain}"

    return output1, output2, output3

# Streamlit UI
st.title("ðŸ“ž Phone Pattern Generator App")

st.markdown("Generate multiple variations of phone numbers for searching or CRM entry.")

with st.form("phone_form"):
    name = st.text_input("Enter Business Name")
    phone = st.text_input("Enter Phone Number (e.g., +91-9876543210)")

    generate = st.form_submit_button("Generate")
    reset = st.form_submit_button("Reset")

    if generate and name and phone:
        out1, out2, out3 = generate_all_combinations(name, phone)

        st.subheader("ðŸ”¹ Output 1: Business + Original Phone Number")
        st.code(out1)

        st.subheader("ðŸ”¹ Output 2: Business + 3 Variants")
        st.code(out2)

        st.subheader("ðŸ”¹ Output 3: Business + All 5 Variants")
        st.code(out3)

    if reset:
        st.experimental_rerun()


